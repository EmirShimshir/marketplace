version: '3.9'

services:
  postgres:
    image: postgres:latest
    restart: on-failure
    environment:
      - POSTGRES_DATABASE
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend

  pg_admin:
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - backend


  migrate:
    image: migrate/migrate
    container_name: 'migrate'
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database",
              "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DATABASE}?sslmode=disable",
              "up", "2"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  redis:
    image: redis
    container_name: 'redis'
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/var/lib/redis
      - redis-config:/usr/local/etc/storage/redis.conf
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: 'minio'
    command: minio server /data --console-address :9001
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env

volumes:
  postgres-data:
  minio-data:
  redis-data:
  redis-config:


networks:
  backend:
    name: "backend"
    driver: bridge

